name: Update Lines of Code in Readme

on:
  schedule:
    - cron: "0 0 * * 0" # Runs weekly on Sunday at midnight (UTC)
  workflow_dispatch: # Allows manual trigger

jobs:
  count-lines:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      # Install required dependencies: jq (JSON processor), cloc (count lines of code), and locale settings
      - name: Install Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y jq cloc locales
          sudo locale-gen en_US.UTF-8

      # Fetch public repositories (excluding forks) and clone only the default branch
      - name: Fetch and Clone Repositories
        env:
          GH_PAT: ${{ secrets.GH_PAT }}
        run: |
          # Set your GitHub username
          USERNAME="HaiderMalikk"

          # Get a list of public repositories that are not forks
          REPOS=$(curl -H "Authorization: token $GH_PAT" -s "https://api.github.com/users/$USERNAME/repos?per_page=100&type=public" | jq -r '.[] | select(.fork == false) | .full_name')

          mkdir -p public-repos
          cd public-repos

          for REPO in $REPOS; do
            REPO_URL="https://github.com/$REPO.git"
            AUTHENTICATED_REPO=$(echo "$REPO_URL" | sed "s/https:\/\//https:\/\/$GH_PAT@/g")
            
            # Determine the default branch dynamically and clone only that branch
            DEFAULT_BRANCH=$(curl -H "Authorization: token $GH_PAT" -s "https://api.github.com/repos/$REPO" | jq -r '.default_branch')

            echo "Cloning $REPO (default branch: $DEFAULT_BRANCH)..."
            git clone --branch "$DEFAULT_BRANCH" --single-branch "$AUTHENTICATED_REPO" "$(basename $REPO)-$DEFAULT_BRANCH" || echo "Failed to clone $REPO."
          done

          # Run cloc to analyze lines of code, excluding non-source code files
          echo "Calculating lines of code..."
          mkdir -p ../output
          cloc . --exclude-ext=json,md --json > ../output/cloc-output.json

      # Commit and push the updated cloc-output.json and README.md to the current branch
      - name: Commit and Push Output
        env:
          GH_PAT: ${{ secrets.GH_PAT }}
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

          # Extract language line counts from cloc JSON
          TOTAL_LINES=$(jq '.SUM.code // 0' output/cloc-output.json)
          PYTHON=$(jq '.Python.code // 0' output/cloc-output.json)
          JAVA=$(jq '.Java.code // 0' output/cloc-output.json)
          JS=$(jq '.JavaScript.code // 0' output/cloc-output.json)
          TS=$(jq '.TypeScript.code // 0' output/cloc-output.json)
          JSX=$(jq '.JSX.code // 0' output/cloc-output.json)
          TSX=$(jq '.TSX.code // 0' output/cloc-output.json)
          C_LANG=$(jq '.C.code // 0' output/cloc-output.json)
          CSS=$(jq '.CSS.code // 0' output/cloc-output.json)
          IPYNB=$(jq '."Jupyter Notebook".code // 0' output/cloc-output.json)
          
          # Calculate Other
          OTHER=$((TOTAL_LINES - PYTHON - JAVA - JS - TS - JSX - TSX - C_LANG - CSS - IPYNB))
          
          # Format numbers with commas
          format() {
            export LC_ALL="en_US.UTF-8"
            printf "%'d\n" "$1"
          }
          
          # Create the updated code block
          CODE_BLOCK="\`\`\`
          [ LANGUAGES BREAKDOWN ]
          
          JavaScript        --> $(format $JS) lines
          TypeScript        --> $(format $TS) lines
          JSX               --> $(format $JSX) lines
          TSX               --> $(format $TSX) lines
          Python            --> $(format $PYTHON) lines
          Java              --> $(format $JAVA) lines
          C                 --> $(format $C_LANG) lines
          CSS               --> $(format $CSS) lines
          Jupyter Notebook  --> $(format $IPYNB) lines
          Other             --> $(format $OTHER) lines
          
          [ TOTAL LINES OF CODE: $(format $TOTAL_LINES) ]
          \`\`\`"


          # Update README.md by replacing the section between predefined comment markers
          echo "$CODE_BLOCK" > temp_block.txt
          sed -i '/<!-- LANGUAGES BREAKDOWN START -->/,/<!-- LANGUAGES BREAKDOWN END -->/{
              //!d
              /<!-- LANGUAGES BREAKDOWN START -->/r temp_block.txt
          }' README.md

          rm temp_block.txt

          git add output/cloc-output.json README.md
          git commit -m "chore: update README and cloc-output.json with latest code stats" || echo "No changes to commit"
          git push origin HEAD
